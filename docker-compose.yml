version: '3.1'

services:

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 4118
      POSTGRES_USER: root
      POSTGRES_DB: mydb
    ports:
      - 5432:5432
    networks:
      - db

  influxdb:
    image: influxdb:2.0
    restart: always
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE}
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
    networks:
      - influxdb
  
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - rabbitmq

  generator-database:
    build:
      context: .
      dockerfile: Dockerfile
      target: generator
    environment:
      DATABASE_URL: ${DATABASE_URL}
    command: /bin/sh -c "sleep 10 && exit"
    restart: "no"
    networks:
      - db

  
  app-smtp:
    build:
      context: .
      dockerfile: Dockerfile
      target: smtp
    restart: always
    networks:
      - rabbitmq

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: skisync
    restart: always
    ports:
      - 8000:3000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - db
      - rabbitmq

  app-influx:
    build: 
      context: .
      dockerfile: Dockerfile
      target: influx
    restart: always
    networks:
      - rabbitmq
      - influxdb



networks:
  # network for database
  db:
    driver: bridge
  # network for influxdb
  influxdb:
    driver: bridge
  # network for rabbitmq
  rabbitmq:
    driver: bridge
  # network for smtp