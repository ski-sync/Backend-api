image: node:latest

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

stages:
  - test
  - sonarqube-check
  - deploy

test:
  stage: test
  script:
    - npm install
    - npm run test
    - npm run test:cov
  cache:
    untracked: true
    key: node_modules-cache-${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push
  artifacts:
    name: ${CI_JOB_NAME}
    expire_in: "15min"
    paths:
      - ./coverage
  only:
    - feature/pipelines
    - main
    - dev

lint:
  stage: test
  script:
    - npm install
    - npm run lint
  only:
    - feature/pipelines
    - main
    - dev

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - feature/pipelines
    - main
    - dev

docker-post:
  image: docker:24.0.5
  stage: deploy
  services:
    - docker:24.0.5-dind
  needs:
    - job: build
  only:
    - main
  script:
    - docker login registry.gitlab.com -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t registry.gitlab.com/iot2960642/web-services/doctors-api:$CI_COMMIT_REF_SLUG .
    - docker push registry.gitlab.com/iot2960642/web-services/doctors-api:$CI_COMMIT_REF_SLUG

deploy:
  image: docker:24.0.5
  stage: deploy
  services:
    - docker:24.0.5-dind
  script:
    - echo "Deploying to production server"
  only:
    - main
  needs:
    - job: docker-post
  allow_failure: true